# Gramine manifest for Python ML workload with TensorFlow and Flower

loader.entrypoint = "file:{{ python_executable }}"
libos.entrypoint = "{{ python_executable }}"

loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:/lib/x86_64-linux-gnu:/usr/lib:/usr/lib/x86_64-linux-gnu"
loader.env.PATH = "/bin:/usr/bin:/usr/local/bin"
loader.env.PYTHONPATH = "{{ current_dir }}"
loader.env.HOME = "/home/user"

# SGX Configuration
sgx.debug = {{ sgx_debug }}
sgx.enclave_size = "{{ enclave_size }}"
sgx.thread_num = {{ thread_num }}

# Enable attestation
sgx.remote_attestation = "{{ attestation_type }}"

# File system mounts
fs.mounts = [
    { path = "/lib", uri = "file:/lib" },
    { path = "/lib64", uri = "file:/lib64" },
    { path = "/usr", uri = "file:/usr" },
    { path = "/bin", uri = "file:/bin" },
    { path = "/etc", uri = "file:/etc" },
    { path = "/tmp", uri = "file:/tmp" },
    { path = "/home/user", uri = "file:{{ current_dir }}" },
    { path = "/data", uri = "file:{{ current_dir }}/data" },
]

# Trusted files (Python runtime and application)
sgx.trusted_files = [
    "file:{{ python_executable }}",
    "file:/lib/",
    "file:/lib64/",
    "file:/usr/lib/",
    "file:/usr/bin/",
    "file:{{ current_dir }}/",
]

# Allowed files (data and temporary files)
sgx.allowed_files = [
    "file:/tmp/",
    "file:/data/",
    "file:{{ current_dir }}/data/",
    "file:{{ current_dir }}/results/",
]

# Network access for Flower communication
sys.enable_sigterm_injection = true
sys.enable_extra_runtime_domain_names_conf = true 