/root/ppml_project/.venv/bin/python /mnt/c/Users/Administrator/PycharmProjects/ppml_project/dp1/dp_main.py 
============================================================
DIFFERENTIAL PRIVACY FEDERATED LEARNING EXPERIMENT
============================================================

--- Single DP Experiment ---

[MAIN] Starting experiment: default
[MAIN] DP: True, Noise Multiplier: 1.0
[MAIN] Starting Flower server...
[MAIN] Starting client 1...
[MAIN] Starting client 2...
[CLIENT 1] 2025-06-23 17:24:10.498807: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[CLIENT 1] 2025-06-23 17:24:10.613316: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
[CLIENT 1] 2025-06-23 17:24:11.300845: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
[CLIENT 1] 2025-06-23 17:24:11.303687: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[CLIENT 1] To enable the following instructions: AVX2 AVX_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[CLIENT 2] 2025-06-23 17:24:11.551711: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[CLIENT 2] 2025-06-23 17:24:11.555017: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
[CLIENT 2] 2025-06-23 17:24:11.591653: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
[CLIENT 2] 2025-06-23 17:24:11.592253: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[CLIENT 2] To enable the following instructions: AVX2 AVX_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[MAIN] Starting client 3...
[CLIENT 2] 2025-06-23 17:24:12.994584: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[CLIENT 1] 2025-06-23 17:24:12.994801: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[CLIENT 3] 2025-06-23 17:24:13.589394: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[CLIENT 3] 2025-06-23 17:24:13.591110: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
[CLIENT 3] 2025-06-23 17:24:13.629273: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
[CLIENT 3] 2025-06-23 17:24:13.629886: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[CLIENT 3] To enable the following instructions: AVX2 AVX_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[MAIN] Starting client 4...
[CLIENT 3] 2025-06-23 17:24:14.537779: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[CLIENT 4] 2025-06-23 17:24:15.564415: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[CLIENT 4] 2025-06-23 17:24:15.567370: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
[CLIENT 4] 2025-06-23 17:24:15.615496: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
[CLIENT 4] 2025-06-23 17:24:15.616050: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[CLIENT 4] To enable the following instructions: AVX2 AVX_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[CLIENT 1] Loading client data from: /mnt/c/Users/Administrator/PycharmProjects/ppml_project/data/clients/client_1.csv
[CLIENT 2] Loading client data from: /mnt/c/Users/Administrator/PycharmProjects/ppml_project/data/clients/client_2.csv
[CLIENT 3] Loading client data from: /mnt/c/Users/Administrator/PycharmProjects/ppml_project/data/clients/client_3.csv
[MAIN] Starting client 5...
[CLIENT 4] 2025-06-23 17:24:16.705899: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[CLIENT 1] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 1] [CLIENT 1] DP Model initialized (noise_multiplier=1.0)
[CLIENT 1] [CLIENT 1] Starting DP client...
[CLIENT 1] INFO flwr 2025-06-23 17:24:17,501 | grpc.py:50 | Opened insecure gRPC connection (no certificates were passed)
[CLIENT 1] INFO:flwr:Opened insecure gRPC connection (no certificates were passed)
[CLIENT 3] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 1] DEBUG flwr 2025-06-23 17:24:17,508 | connection.py:38 | ChannelConnectivity.IDLE
[CLIENT 1] DEBUG:flwr:ChannelConnectivity.IDLE
[CLIENT 3] [CLIENT 3] DP Model initialized (noise_multiplier=1.0)
[CLIENT 3] [CLIENT 3] Starting DP client...
[CLIENT 1] DEBUG flwr 2025-06-23 17:24:17,511 | connection.py:38 | ChannelConnectivity.READY
[CLIENT 1] DEBUG:flwr:ChannelConnectivity.READY
[CLIENT 1] [CLIENT 1] connected to server
[CLIENT 3] INFO flwr 2025-06-23 17:24:17,526 | grpc.py:50 | Opened insecure gRPC connection (no certificates were passed)
[CLIENT 3] INFO:flwr:Opened insecure gRPC connection (no certificates were passed)
[CLIENT 3] DEBUG flwr 2025-06-23 17:24:17,530 | connection.py:38 | ChannelConnectivity.IDLE
[CLIENT 3] DEBUG:flwr:ChannelConnectivity.IDLE
[CLIENT 3] DEBUG flwr 2025-06-23 17:24:17,531 | connection.py:38 | ChannelConnectivity.CONNECTING
[CLIENT 3] DEBUG:flwr:ChannelConnectivity.CONNECTING
[CLIENT 3] DEBUG flwr 2025-06-23 17:24:17,532 | connection.py:38 | ChannelConnectivity.READY
[CLIENT 3] DEBUG:flwr:ChannelConnectivity.READY
[CLIENT 2] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 2] [CLIENT 2] DP Model initialized (noise_multiplier=1.0)
[CLIENT 2] [CLIENT 2] Starting DP client...
[CLIENT 2] INFO flwr 2025-06-23 17:24:17,568 | grpc.py:50 | Opened insecure gRPC connection (no certificates were passed)
[CLIENT 2] INFO:flwr:Opened insecure gRPC connection (no certificates were passed)
[CLIENT 2] DEBUG flwr 2025-06-23 17:24:17,571 | connection.py:38 | ChannelConnectivity.IDLE
[CLIENT 2] DEBUG:flwr:ChannelConnectivity.IDLE
[CLIENT 2] DEBUG flwr 2025-06-23 17:24:17,574 | connection.py:38 | ChannelConnectivity.READY
[CLIENT 2] DEBUG:flwr:ChannelConnectivity.READY
[CLIENT 5] 2025-06-23 17:24:17.836235: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[CLIENT 5] 2025-06-23 17:24:17.838098: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
[CLIENT 5] 2025-06-23 17:24:17.876836: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
[CLIENT 5] 2025-06-23 17:24:17.877404: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
[CLIENT 5] To enable the following instructions: AVX2 AVX_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[CLIENT 4] Loading client data from: /mnt/c/Users/Administrator/PycharmProjects/ppml_project/data/clients/client_4.csv
[MAIN] Started 5 clients. Training in progress...
[CLIENT 5] 2025-06-23 17:24:18.693890: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[CLIENT 4] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 4] [CLIENT 4] DP Model initialized (noise_multiplier=1.0)
[CLIENT 4] [CLIENT 4] Starting DP client...
[CLIENT 4] INFO flwr 2025-06-23 17:24:19,321 | grpc.py:50 | Opened insecure gRPC connection (no certificates were passed)
[CLIENT 4] INFO:flwr:Opened insecure gRPC connection (no certificates were passed)
[CLIENT 4] DEBUG flwr 2025-06-23 17:24:19,324 | connection.py:38 | ChannelConnectivity.IDLE
[CLIENT 4] DEBUG:flwr:ChannelConnectivity.IDLE
[CLIENT 4] DEBUG flwr 2025-06-23 17:24:19,326 | connection.py:38 | ChannelConnectivity.READY
[CLIENT 4] DEBUG:flwr:ChannelConnectivity.READY
[CLIENT 5] Loading client data from: /mnt/c/Users/Administrator/PycharmProjects/ppml_project/data/clients/client_5.csv
[CLIENT 5] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 5] [CLIENT 5] DP Model initialized (noise_multiplier=1.0)
[CLIENT 5] [CLIENT 5] Starting DP client...
[CLIENT 5] INFO flwr 2025-06-23 17:24:20,668 | grpc.py:50 | Opened insecure gRPC connection (no certificates were passed)
[CLIENT 5] INFO:flwr:Opened insecure gRPC connection (no certificates were passed)
[CLIENT 5] DEBUG flwr 2025-06-23 17:24:20,670 | connection.py:38 | ChannelConnectivity.IDLE
[CLIENT 5] DEBUG:flwr:ChannelConnectivity.IDLE
[CLIENT 5] DEBUG flwr 2025-06-23 17:24:20,672 | connection.py:38 | ChannelConnectivity.CONNECTING
[CLIENT 5] DEBUG:flwr:ChannelConnectivity.CONNECTING
[CLIENT 5] DEBUG flwr 2025-06-23 17:24:20,675 | connection.py:38 | ChannelConnectivity.READY
[CLIENT 5] DEBUG:flwr:ChannelConnectivity.READY
[CLIENT 5] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 1] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 5] [CLIENT 5] Round 1 - Privacy spent: ε=1.0903, δ=1.00e-05
[CLIENT 5] [CLIENT 5] connected to server
[CLIENT 1] [CLIENT 1] Round 1 - Privacy spent: ε=1.0903, δ=1.00e-05
[CLIENT 1] [CLIENT 1] connected to server
[CLIENT 4] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 4] [CLIENT 4] Round 1 - Privacy spent: ε=1.0903, δ=1.00e-05
[CLIENT 4] [CLIENT 4] connected to server
[CLIENT 2] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 2] [CLIENT 2] Round 1 - Privacy spent: ε=1.0903, δ=1.00e-05
[CLIENT 2] [CLIENT 2] connected to server
[MAIN] Client 5 privacy update: ε=1.0903, δ=1.00e-05
[MAIN] Client 1 privacy update: ε=1.0903, δ=1.00e-05
[MAIN] Client 4 privacy update: ε=1.0903, δ=1.00e-05
[MAIN] Client 2 privacy update: ε=1.0903, δ=1.00e-05
[CLIENT 3] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 3] [CLIENT 3] Round 1 - Privacy spent: ε=1.0903, δ=1.00e-05
[CLIENT 3] [CLIENT 3] connected to server
[CLIENT 4] [CLIENT 4] Round 1 - Accuracy: 0.8919
[CLIENT 1] [CLIENT 1] Round 1 - Accuracy: 0.8991
[CLIENT 3] [CLIENT 3] Round 1 - Accuracy: 0.8932
[CLIENT 5] [CLIENT 5] Round 1 - Accuracy: 0.9005
[CLIENT 2] [CLIENT 2] Round 1 - Accuracy: 0.8919
[MAIN] Client 3 privacy update: ε=1.0903, δ=1.00e-05
[MAIN] Client 4, Round 1, Accuracy: 0.8919
[MAIN] Client 1, Round 1, Accuracy: 0.8991
[MAIN] Client 3, Round 1, Accuracy: 0.8932
[MAIN] Client 5, Round 1, Accuracy: 0.9005
[MAIN] Client 2, Round 1, Accuracy: 0.8919
[CLIENT 5] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 5] [CLIENT 5] Round 2 - Privacy spent: ε=1.2624, δ=1.00e-05
[CLIENT 5] [CLIENT 5] connected to server
[CLIENT 4] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 4] [CLIENT 4] Round 2 - Privacy spent: ε=1.2624, δ=1.00e-05
[CLIENT 4] [CLIENT 4] connected to server
[CLIENT 3] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 3] [CLIENT 3] Round 2 - Privacy spent: ε=1.2624, δ=1.00e-05
[CLIENT 3] [CLIENT 3] connected to server
[MAIN] Client 5 privacy update: ε=1.2624, δ=1.00e-05
[MAIN] Client 4 privacy update: ε=1.2624, δ=1.00e-05
[MAIN] Client 3 privacy update: ε=1.2624, δ=1.00e-05
[CLIENT 2] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 2] [CLIENT 2] Round 2 - Privacy spent: ε=1.2624, δ=1.00e-05
[CLIENT 2] [CLIENT 2] connected to server
[CLIENT 1] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 1] [CLIENT 1] Round 2 - Privacy spent: ε=1.2624, δ=1.00e-05
[CLIENT 1] [CLIENT 1] connected to server
[CLIENT 2] [CLIENT 2] Round 2 - Accuracy: 0.8919
[CLIENT 5] [CLIENT 5] Round 2 - Accuracy: 0.9005
[CLIENT 3] [CLIENT 3] Round 2 - Accuracy: 0.8932
[CLIENT 1] [CLIENT 1] Round 2 - Accuracy: 0.8991
[CLIENT 4] [CLIENT 4] Round 2 - Accuracy: 0.8919
[MAIN] Client 2 privacy update: ε=1.2624, δ=1.00e-05
[MAIN] Client 1 privacy update: ε=1.2624, δ=1.00e-05
[MAIN] Client 2, Round 2, Accuracy: 0.8919
[MAIN] Client 5, Round 2, Accuracy: 0.9005
[MAIN] Client 3, Round 2, Accuracy: 0.8932
[MAIN] Client 1, Round 2, Accuracy: 0.8991
[MAIN] Client 4, Round 2, Accuracy: 0.8919
[CLIENT 5] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 5] [CLIENT 5] Round 3 - Privacy spent: ε=1.4345, δ=1.00e-05
[CLIENT 5] [CLIENT 5] connected to server
[CLIENT 3] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 4] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 3] [CLIENT 3] Round 3 - Privacy spent: ε=1.4345, δ=1.00e-05
[CLIENT 3] [CLIENT 3] connected to server
[CLIENT 4] [CLIENT 4] Round 3 - Privacy spent: ε=1.4345, δ=1.00e-05
[CLIENT 4] [CLIENT 4] connected to server
[CLIENT 1] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 2] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 1] [CLIENT 1] Round 3 - Privacy spent: ε=1.4345, δ=1.00e-05
[CLIENT 1] [CLIENT 1] connected to server
[CLIENT 2] [CLIENT 2] Round 3 - Privacy spent: ε=1.4345, δ=1.00e-05
[CLIENT 2] [CLIENT 2] connected to server
[CLIENT 4] [CLIENT 4] Round 3 - Accuracy: 0.8919
[CLIENT 1] [CLIENT 1] Round 3 - Accuracy: 0.8991
[CLIENT 5] [CLIENT 5] Round 3 - Accuracy: 0.9005
[CLIENT 2] [CLIENT 2] Round 3 - Accuracy: 0.8919
[CLIENT 3] [CLIENT 3] Round 3 - Accuracy: 0.8932
[MAIN] Client 5 privacy update: ε=1.4345, δ=1.00e-05
[MAIN] Client 3 privacy update: ε=1.4345, δ=1.00e-05
[MAIN] Client 4 privacy update: ε=1.4345, δ=1.00e-05
[MAIN] Client 1 privacy update: ε=1.4345, δ=1.00e-05
[MAIN] Client 2 privacy update: ε=1.4345, δ=1.00e-05
[MAIN] Client 4, Round 3, Accuracy: 0.8919
[MAIN] Client 1, Round 3, Accuracy: 0.8991
[MAIN] Client 5, Round 3, Accuracy: 0.9005
[MAIN] Client 2, Round 3, Accuracy: 0.8919
[MAIN] Client 3, Round 3, Accuracy: 0.8932
[CLIENT 5] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 5] [CLIENT 5] Round 4 - Privacy spent: ε=1.6066, δ=1.00e-05
[CLIENT 5] [CLIENT 5] connected to server
[CLIENT 4] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 3] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 4] [CLIENT 4] Round 4 - Privacy spent: ε=1.6066, δ=1.00e-05
[CLIENT 4] [CLIENT 4] connected to server
[CLIENT 2] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 3] [CLIENT 3] Round 4 - Privacy spent: ε=1.6066, δ=1.00e-05
[CLIENT 3] [CLIENT 3] connected to server
[CLIENT 2] [CLIENT 2] Round 4 - Privacy spent: ε=1.6066, δ=1.00e-05
[CLIENT 2] [CLIENT 2] connected to server
[CLIENT 1] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 1] [CLIENT 1] Round 4 - Privacy spent: ε=1.6066, δ=1.00e-05
[CLIENT 1] [CLIENT 1] connected to server
[MAIN] Client 5 privacy update: ε=1.6066, δ=1.00e-05
[MAIN] Client 4 privacy update: ε=1.6066, δ=1.00e-05
[MAIN] Client 3 privacy update: ε=1.6066, δ=1.00e-05
[MAIN] Client 2 privacy update: ε=1.6066, δ=1.00e-05
[MAIN] Client 1 privacy update: ε=1.6066, δ=1.00e-05
[CLIENT 5] [CLIENT 5] Round 4 - Accuracy: 0.9005
[CLIENT 4] [CLIENT 4] Round 4 - Accuracy: 0.8919
[CLIENT 1] [CLIENT 1] Round 4 - Accuracy: 0.8991
[CLIENT 2] [CLIENT 2] Round 4 - Accuracy: 0.8919
[CLIENT 3] [CLIENT 3] Round 4 - Accuracy: 0.8932
[MAIN] Client 5, Round 4, Accuracy: 0.9005
[MAIN] Client 4, Round 4, Accuracy: 0.8919
[MAIN] Client 1, Round 4, Accuracy: 0.8991
[MAIN] Client 2, Round 4, Accuracy: 0.8919
[MAIN] Client 3, Round 4, Accuracy: 0.8932
[CLIENT 5] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 5] [CLIENT 5] Round 5 - Privacy spent: ε=1.7788, δ=1.00e-05
[CLIENT 5] [CLIENT 5] connected to server
[CLIENT 3] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 3] [CLIENT 3] Round 5 - Privacy spent: ε=1.7788, δ=1.00e-05
[CLIENT 3] [CLIENT 3] connected to server
[CLIENT 4] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 4] [CLIENT 4] Round 5 - Privacy spent: ε=1.7788, δ=1.00e-05
[CLIENT 4] [CLIENT 4] connected to server
[CLIENT 1] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 1] [CLIENT 1] Round 5 - Privacy spent: ε=1.7788, δ=1.00e-05
[CLIENT 1] [CLIENT 1] connected to server
[CLIENT 2] WARNING:absl:`compute_dp_sgd_privacy` is deprecated. It does not account for doubling of sensitivity with microbatching, and assumes Poisson subsampling, which is rarely used in practice. Please use `compute_dp_sgd_privacy_statement`, which provides appropriate context for the guarantee. To compute epsilon under different assumptions than those in `compute_dp_sgd_privacy_statement`, call the `dp_accounting` libraries directly.
[CLIENT 2] [CLIENT 2] Round 5 - Privacy spent: ε=1.7788, δ=1.00e-05
[CLIENT 2] [CLIENT 2] connected to server
[CLIENT 2] [CLIENT 2] Round 5 - Accuracy: 0.8919
[CLIENT 1] [CLIENT 1] Round 5 - Accuracy: 0.8991
[CLIENT 3] [CLIENT 3] Round 5 - Accuracy: 0.8932
[CLIENT 4] [CLIENT 4] Round 5 - Accuracy: 0.8919
[CLIENT 5] [CLIENT 5] Round 5 - Accuracy: 0.9005
[CLIENT 4] DEBUG flwr 2025-06-23 17:24:41,113 | connection.py:109 | gRPC channel closed
[CLIENT 5] DEBUG flwr 2025-06-23 17:24:41,113 | connection.py:109 | gRPC channel closed
[CLIENT 5] DEBUG:flwr:gRPC channel closed
[CLIENT 2] DEBUG flwr 2025-06-23 17:24:41,113 | connection.py:109 | gRPC channel closed
[CLIENT 2] DEBUG:flwr:gRPC channel closed
[CLIENT 2] INFO flwr 2025-06-23 17:24:41,113 | app.py:153 | Disconnect and shut down
[CLIENT 2] INFO:flwr:Disconnect and shut down
[CLIENT 5] INFO flwr 2025-06-23 17:24:41,113 | app.py:153 | Disconnect and shut down
[CLIENT 5] INFO:flwr:Disconnect and shut down
[CLIENT 4] DEBUG:flwr:gRPC channel closed
[CLIENT 1] DEBUG flwr 2025-06-23 17:24:41,113 | connection.py:109 | gRPC channel closed
[CLIENT 1] DEBUG:flwr:gRPC channel closed
[CLIENT 1] INFO flwr 2025-06-23 17:24:41,113 | app.py:153 | Disconnect and shut down
[CLIENT 1] INFO:flwr:Disconnect and shut down
[CLIENT 4] INFO flwr 2025-06-23 17:24:41,114 | app.py:153 | Disconnect and shut down
[CLIENT 4] INFO:flwr:Disconnect and shut down
[CLIENT 3] DEBUG flwr 2025-06-23 17:24:41,113 | connection.py:109 | gRPC channel closed
[CLIENT 3] DEBUG:flwr:gRPC channel closed
[CLIENT 3] INFO flwr 2025-06-23 17:24:41,113 | app.py:153 | Disconnect and shut down
[CLIENT 3] INFO:flwr:Disconnect and shut down
[MAIN] Client 5 privacy update: ε=1.7788, δ=1.00e-05
[MAIN] Client 3 privacy update: ε=1.7788, δ=1.00e-05
[MAIN] Client 4 privacy update: ε=1.7788, δ=1.00e-05
[MAIN] Client 1 privacy update: ε=1.7788, δ=1.00e-05
[MAIN] Client 2 privacy update: ε=1.7788, δ=1.00e-05
[MAIN] Client 2, Round 5, Accuracy: 0.8919
[MAIN] Client 1, Round 5, Accuracy: 0.8991
[MAIN] Client 3, Round 5, Accuracy: 0.8932
[MAIN] Client 4, Round 5, Accuracy: 0.8919
[MAIN] Client 5, Round 5, Accuracy: 0.9005
[MAIN] Waiting for all clients to finish...
[MAIN] Experiment completed: default
[MAIN] Results saved to: /mnt/c/Users/Administrator/PycharmProjects/ppml_project/dp1/results/default
[MAIN] Total results collected: 25
[MAIN] Final Privacy Budget - Total ε: 8.8940, Average ε: 1.7788
[MAIN] Cleaning up processes...

============================================================
EXPERIMENT SUMMARY
============================================================
Total experiments: 1
Successful experiments: 1
Failed experiments: 0

Results saved in: results/
Files generated:
- fl_metrics.csv: Detailed metrics for each round
- experiment_summary.json: Experiment summary and final metrics

Experiment completed!

Process finished with exit code 0
